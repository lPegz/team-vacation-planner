plugins {
	id 'org.springframework.boot' version '2.2.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'groovy'
	id 'com.bmuschko.docker-spring-boot-application' version '6.1.2'
	id "io.freefair.lombok" version "5.0.0-rc6"
}

group = 'br.pegz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
	integrationTest {
		groovy {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration-test/java')
		}
		resources.srcDir file('src/integration-test/resources')
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

test {
	useJUnitPlatform()
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

dockerCreateDockerfile {
	instruction """
		RUN mkdir /keys
		RUN cd /keys
		RUN keytool -genkey -alias tvpks \\
        -keyalg RSA -keystore /keys/tvpks \\
        -dname "CN=Team Vacation Planner, OU=Management, O=Free, L=New York, S=NY, C=US" \\
        -deststoretype pkcs12 \\
        -storepass thatstheway -keypass thatstheway \\
        -keysize 4096
	"""
}

springBoot {
	buildInfo {
		properties {
			artifact = 'team-vacation-planner'
			version = '0.0.1'
			group = 'br.pegz'
			name = 'Team Vacation Planner'
		}
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
	implementation 'com.auth0:java-jwt:3.9.0'
	// https://mvnrepository.com/artifact/com.github.derjust/spring-data-dynamodb
	implementation group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.1.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompile group: 'cloud.localstack', name: 'localstack-utils', version: '0.2.1'
	integrationTestCompile group: 'cloud.localstack', name: 'localstack-utils', version: '0.2.1'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	integrationTestImplementation 'org.spockframework.spock:spock-core:spock-1.3'
	integrationTestImplementation 'org.spockframework.spock:spock-spring:spock-1.3'
}

docker {
	springBootApplication {
		baseImage = 'openjdk:11-jre-slim'
		ports = [9090, 8365]
		images = ["teamvacationplanner/team-vacation-planner:${project.version}", 'teamvacationplanner/team-vacation-planner:latest']

		jvmArgs = ['-Dspring.profiles.active=container']
	}
}