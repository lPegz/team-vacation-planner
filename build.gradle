plugins {
	id 'org.springframework.boot' version '2.2.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-spring-boot-application' version '6.1.2'
}

group = 'br.pegz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dockerCreateDockerfile {
	instruction """
		RUN mkdir /keys
		RUN cd /keys
		RUN keytool -genkey -alias tvpks \\
        -keyalg RSA -keystore /keys/tvpks \\
        -dname "CN=Team Vacation Planner, OU=Management, O=Free, L=New York, S=NY, C=US" \\
        -deststoretype pkcs12 \\
        -storepass thatstheway -keypass thatstheway \\
        -keysize 4096
	"""
}

springBoot {
	buildInfo {
		properties {
			artifact = 'team-vacation-planner'
			version = '0.0.1'
			group = 'br.pegz'
			name = 'Team Vacation Planner'
		}
	}

}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.auth0:java-jwt:3.9.0'
	implementation 'com.auth0:jwks-rsa:0.9.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}


docker {
	springBootApplication {
		baseImage = 'openjdk:11-jre-slim'
		ports = [9090, 8365]
		images = ['team-vacation-planner:0.0.1', 'team-vacation-planner:latest']

		jvmArgs = ['-Dspring.profiles.active=container']
	}
}